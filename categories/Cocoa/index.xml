<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cocoa on AuTopTr</title><link>https://autoptr.top/categories/Cocoa/</link><description>Recent content in Cocoa on AuTopTr</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 03 Jun 2019 08:08:08 +0800</lastBuildDate><atom:link href="https://autoptr.top/categories/Cocoa/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutorials - All credit to github.com/NSHipster</title><link>https://autoptr.top/tutorials/NSHipster/</link><pubDate>Mon, 03 Jun 2019 08:08:08 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/</guid><description>[Tutorials,教程]&lt;br />Tutorials,教程</description></item><item><title>CMMotionActivity</title><link>https://autoptr.top/tutorials/NSHipster/2018-09-10-cmmotionactivity/</link><pubDate>Mon, 10 Sep 2018 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2018-09-10-cmmotionactivity/</guid><description>如今的 iPhone 都有着一整套传感器，包括相机、气压计、陀螺仪、磁强计和加速规。和人类一样，它们使用不同感觉信息的组合来确定其位置和朝向，通常和我们自身的生物力学过程非常相似。
&lt;br />[CMMotionActivity,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />CMMotionActivity,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>密码规则 / UITextInputPasswordRules</title><link>https://autoptr.top/tutorials/NSHipster/2018-07-23-uitextinputpasswordrules/</link><pubDate>Mon, 23 Jul 2018 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2018-07-23-uitextinputpasswordrules/</guid><description>密码应该完全没有任何意义，除非它是一个 90 年代骇客电影的标题或者一个密室逃脱游戏的答案。&lt;br />[密码规则 / UITextInputPasswordRules,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />密码规则 / UITextInputPasswordRules,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>UIKeyCommand</title><link>https://autoptr.top/tutorials/NSHipster/2015-07-27-uikeycommand/</link><pubDate>Mon, 27 Jul 2015 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2015-07-27-uikeycommand/</guid><description>为了使 iPad 更高效的工作，iOS 9 增加了 *可发现特性*，这是一个叠加层，用于显示一个应用程序内当前可用的键盘命令。在 iPad 上，这个微小的变化使得键盘命令瞬间变得比以往有用多了，并且也使得 `UIKeyCommand` 成为你应用程序的一个必要的附加功能&lt;br />[UIKeyCommand,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />UIKeyCommand,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>CloudKit</title><link>https://autoptr.top/tutorials/NSHipster/2015-06-29-cloudkit/</link><pubDate>Mon, 29 Jun 2015 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2015-06-29-cloudkit/</guid><description>作为 iOS 开发者，如果想自己独立制作应用，有时可能需要写一些后端代码。即使对于能够胜任这项工作的移动开发者而言，这不仅意味着要写代码，跟多的是长期维护。最糟糕的情况可能并不是大家不喜欢你的应用，而是在巨大流量压力下你的服务器宕机了。
幸运的是，现在我们有 CloudKit 了。苹果替我们操心这些事情，你只管让应用变得完美。&lt;br />[CloudKit,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />CloudKit,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSCalendar Additions</title><link>https://autoptr.top/tutorials/NSHipster/2015-03-16-nscalendar-additions/</link><pubDate>Mon, 16 Mar 2015 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2015-03-16-nscalendar-additions/</guid><description> `NSCalendar` 已经悄悄的构建了大量的方法方便大家获取和操作日期。 从全新的日期组件存取与日期比较方法，到强大的日期插值与枚举方法，有太多的东西被我们忽视了。接下来让我们抽点时间来了解一下吧。&lt;br />[NSCalendar Additions,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSCalendar Additions,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>JavaScriptCore</title><link>https://autoptr.top/tutorials/NSHipster/2015-01-19-javascriptcore/</link><pubDate>Mon, 19 Jan 2015 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2015-01-19-javascriptcore/</guid><description>OS X Mavericks 和 iOS 7 引入了 JavaScriptCore 库，它把 WebKit 的 JavaScript 引擎用 Objective-C 封装，提供了简单，快速以及安全的方式接入世界上最流行的语言。不管你爱它还是恨它，JavaScript 的普遍存在使得程序员、工具以及融合到 OS X 和 iOS 里这样超快的虚拟机中资源的使用都大幅增长。&lt;br />[JavaScriptCore,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />JavaScriptCore,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSUndoManager</title><link>https://autoptr.top/tutorials/NSHipster/2014-12-15-nsundomanager/</link><pubDate>Mon, 15 Dec 2014 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2014-12-15-nsundomanager/</guid><description>每个人都会犯错误。多亏了 Foundation 库提供了比拼写错误更强大的功能来解救我们。Cocoa 有一套简单强壮的 NSUndoManager API 管理撤销和重做。&lt;br />[NSUndoManager,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSUndoManager,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>UIPrintInteractionController</title><link>https://autoptr.top/tutorials/NSHipster/2014-11-17-uiprintinteractioncontroller/</link><pubDate>Mon, 17 Nov 2014 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2014-11-17-uiprintinteractioncontroller/</guid><description>随着各种不同方式的评论、标记、保存、分享都通过指尖的操作完成，纸质印刷品的价值很容易被人忽视。&lt;br />[UIPrintInteractionController,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />UIPrintInteractionController,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>Core Location in iOS 8</title><link>https://autoptr.top/tutorials/NSHipster/2014-11-10-core-location-in-ios-8/</link><pubDate>Mon, 10 Nov 2014 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2014-11-10-core-location-in-ios-8/</guid><description>自从 iPhone 存在以来，位置服务就一直处于非常重要的位置。iOS 8 给 Core Location 带来了三个主要更新：更分化的权限，室内定位以及访问监控。&lt;br />[Core Location in iOS 8,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />Core Location in iOS 8,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>UIAlertController</title><link>https://autoptr.top/tutorials/NSHipster/2014-09-30-uialertcontroller/</link><pubDate>Tue, 30 Sep 2014 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2014-09-30-uialertcontroller/</guid><description>你知道 `UIAlertView`、`UIActionSheet` (以及它们各自的 delegate protocols) 在 iOS 8 中已经被废弃了吗？不骗你哦。&lt;br />[UIAlertController,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />UIAlertController,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>WKWebView</title><link>https://autoptr.top/tutorials/NSHipster/2014-08-24-wkwebkit/</link><pubDate>Sun, 24 Aug 2014 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2014-08-24-wkwebkit/</guid><description>iOS 与 web 之间的关系非常复杂，这种复杂关系甚至可以追溯到几十年前系统建立初期。&lt;br />[WKWebView,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />WKWebView,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSURL / NSURLComponents</title><link>https://autoptr.top/tutorials/NSHipster/2014-03-24-nsurl/</link><pubDate>Mon, 24 Mar 2014 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2014-03-24-nsurl/</guid><description>在所有的一维数据类型中，URI有着至高地位。单独就人类可阅读的字符串这一点来说，它存在并将永远存在于计算机中任何你能够想象到的对位置信息进行编码的数据中。&lt;br />[NSURL / NSURLComponents,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSURL / NSURLComponents,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>UIReferenceLibraryViewController / DCSDictionaryRef</title><link>https://autoptr.top/tutorials/NSHipster/2014-03-10-dictionary-services/</link><pubDate>Mon, 10 Mar 2014 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2014-03-10-dictionary-services/</guid><description>虽然字典的地位很大程度上已经被基于网络的“一键释义”功能所替代，但是字典和词汇表在拼写检查、语法检查、自动纠错、自动摘要、语义分析等领域，仍然在幕后扮演着重要角色。&lt;br />[UIReferenceLibraryViewController / DCSDictionaryRef,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />UIReferenceLibraryViewController / DCSDictionaryRef,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSTemporaryDirectory / NSItemReplacementDirectory / mktemp(3)</title><link>https://autoptr.top/tutorials/NSHipster/2014-03-03-nstemporarydirectory/</link><pubDate>Mon, 03 Mar 2014 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2014-03-03-nstemporarydirectory/</guid><description>外存被用于写入可持续化保存的数据，但当数据生命周期很短时，用Objective-C操作临时文件的资料却很少（可能有，不过这些资料本身也是“临时”的）。&lt;br />[NSTemporaryDirectory / NSItemReplacementDirectory / mktemp(3),macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSTemporaryDirectory / NSItemReplacementDirectory / mktemp(3),macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSRange</title><link>https://autoptr.top/tutorials/NSHipster/2014-01-13-nsrange/</link><pubDate>Mon, 13 Jan 2014 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2014-01-13-nsrange/</guid><description>NSRange 是 Foundation 框架中核心的类型之一。在框架代码中我们经常看到它作为函数的参数或者返回值类型，因此掌握好 NSRange 这个结构会有很多用处。&lt;br />[NSRange,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSRange,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>UIApplicationDelegate launchOptions</title><link>https://autoptr.top/tutorials/NSHipster/2013-12-16-launch-options/</link><pubDate>Mon, 16 Dec 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-12-16-launch-options/</guid><description>AppDelegate 是 iOS 各种功能的集散中心。&lt;br />[UIApplicationDelegate launchOptions,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />UIApplicationDelegate launchOptions,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSNotification &amp; NSNotificationCenter</title><link>https://autoptr.top/tutorials/NSHipster/2013-12-02-nsnotification-and-nsnotificationcenter/</link><pubDate>Mon, 02 Dec 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-12-02-nsnotification-and-nsnotificationcenter/</guid><description>思想的传播，与沟通的方式有着不可避免的联系。媒体对于信息重要性的影响是如此之大，以至于能够改变要传播的思想本身的含义。千真万确，媒体本身就是信息。&lt;br />[NSNotification &amp; NSNotificationCenter,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSNotification &amp; NSNotificationCenter,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSFileManager</title><link>https://autoptr.top/tutorials/NSHipster/2013-11-18-nsfilemanager/</link><pubDate>Mon, 18 Nov 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-11-18-nsfilemanager/</guid><description>[NSFileManager,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />文件系统是一个复杂的主题，它有数十年的历史，一些遗留下的复杂性和一些特别的地方，已经不是一篇文章就可以描述的了。现在大多数的应用除了简单的文件操作之外不会经常与文件系统交互，所以有时候简单了解它的基础就行了。</description></item><item><title>NSError</title><link>https://autoptr.top/tutorials/NSHipster/2013-10-14-nserror/</link><pubDate>Mon, 14 Oct 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-10-14-nserror/</guid><description>NSError 是基础框架中的无名英雄。勇敢的在危险的方法调用时传入传出，通过消息发送者我们就可以从所关联的上下文中找出我们的错误。&lt;br />[NSError,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSError,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>Key-Value Observing</title><link>https://autoptr.top/tutorials/NSHipster/2013-10-07-key-value-observing/</link><pubDate>Mon, 07 Oct 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-10-07-key-value-observing/</guid><description>问了几次研究 NSBlock 的人员：Key-Value Observing 在 Cocoa 框架里有着最不好用的 API。它很难对付，啰嗦，令人迷惑。最糟糕的是，它的 API 掩盖了 framework 中很引人注目的特性。&lt;br />[Key-Value Observing,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />Key-Value Observing,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSHashTable &amp; NSMapTable</title><link>https://autoptr.top/tutorials/NSHipster/2013-08-19-nshashtable-and-nsmaptable/</link><pubDate>Mon, 19 Aug 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-08-19-nshashtable-and-nsmaptable/</guid><description>NSSet 和 NSDictionary，连同 NSArray 是 Foundation 框架中最常用的几个集合类型。和其它标准库不同的是，它们的实现细节没有对开发者公开，使得开发者只能编写简单的代码，相信框架（在合理的程度上）是高效的。&lt;br />[NSHashTable &amp; NSMapTable,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSHashTable &amp; NSMapTable,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>UIMenuController</title><link>https://autoptr.top/tutorials/NSHipster/2013-07-22-uimenucontroller/</link><pubDate>Mon, 22 Jul 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-07-22-uimenucontroller/</guid><description>移动可用性在当今是一个十分引入注目的领域，特别是考虑到在过去短短的十年时间中它所经历的巨大变革。曾经只有科技精英才能把玩的复杂技术，如今已经飞入寻常百姓家，成为了大部分人使用计算设备的主要形式。&lt;br />[UIMenuController,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />UIMenuController,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSPredicate</title><link>https://autoptr.top/tutorials/NSHipster/2013-07-15-nspredicate/</link><pubDate>Mon, 15 Jul 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-07-15-nspredicate/</guid><description>[NSPredicate,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSPredicate,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSExpression</title><link>https://autoptr.top/tutorials/NSHipster/2013-07-08-nsexpression/</link><pubDate>Mon, 08 Jul 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-07-08-nsexpression/</guid><description>[NSExpression,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSExpression,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSFastEnumeration / NSEnumerator</title><link>https://autoptr.top/tutorials/NSHipster/2013-07-01-enumerators/</link><pubDate>Mon, 01 Jul 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-07-01-enumerators/</guid><description>遍历体现了计算能力的有趣之处。封装只执行一次的逻辑是一回事，把这个封装好的逻辑应用到集合当中的所有元素完全是另一回事了——这也正是计算机程序强大功能的一个体现。&lt;br />[NSFastEnumeration / NSEnumerator,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSFastEnumeration / NSEnumerator,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSUUID / CFUUIDRef / UIDevice -uniqueIdentifier / -identifierForVendor</title><link>https://autoptr.top/tutorials/NSHipster/2013-06-24-uuid-udid-unique-identifier/</link><pubDate>Mon, 24 Jun 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-06-24-uuid-udid-unique-identifier/</guid><description>直到最近之前，应用程序，甚至是跨应用程序启动的时候，获得设备的唯一标识一直都是小菜一碟，简单的请求 UIDevice -uniqueIdentifier 就完事了。&lt;br />[NSUUID / CFUUIDRef / UIDevice -uniqueIdentifier / -identifierForVendor,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSUUID / CFUUIDRef / UIDevice -uniqueIdentifier / -identifierForVendor,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSDataDetector</title><link>https://autoptr.top/tutorials/NSHipster/2013-06-02-nsdatadetector/</link><pubDate>Sun, 02 Jun 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-06-02-nsdatadetector/</guid><description>当人类在他们所有的日常交往中都使用 RDF 后，人工智能的一大任务就是要去搞清楚到底我们都在谈论什么。幸运的是，对于 Cocoa 开发者来说，我们有 NSDataDetector。&lt;br />[NSDataDetector,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSDataDetector,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSCoding / NSKeyedArchiver</title><link>https://autoptr.top/tutorials/NSHipster/2013-05-13-nscoding/</link><pubDate>Mon, 13 May 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-05-13-nscoding/</guid><description>在构建应用程序时，一个重要的架构决策问题是在每次启动之间如何持久化数据。问题是如何精准的重现最后一次关闭应用前的状态；如何描述对象图以使下次完美地重新构建。&lt;br />[NSCoding / NSKeyedArchiver,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSCoding / NSKeyedArchiver,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>MKLocalSearch</title><link>https://autoptr.top/tutorials/NSHipster/2013-04-29-mklocalsearch/</link><pubDate>Mon, 29 Apr 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-04-29-mklocalsearch/</guid><description>在喧闹纷繁的事态下，你可能完全没有发现 iOS 6.1 中的 MapKit 增加了什么。&lt;br />[MKLocalSearch,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />MKLocalSearch,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSSecureCoding</title><link>https://autoptr.top/tutorials/NSHipster/2013-04-15-nssecurecoding/</link><pubDate>Mon, 15 Apr 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-04-15-nssecurecoding/</guid><description>本周的简短文章：你需要了解的关于 NSSecureCoding 的一切。&lt;br />[NSSecureCoding,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSSecureCoding,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>Search Kit</title><link>https://autoptr.top/tutorials/NSHipster/2013-03-25-search-kit/</link><pubDate>Mon, 25 Mar 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-03-25-search-kit/</guid><description>Search Kit 是一个用人类语言来搜索和建立内容索引的 C 框架。它支持词组或部分单词匹配，包括逻辑操作和通配符，且能通过相关性对结果进行排序。Search Kit 也提供了文档总结功能，在生成有代表性的摘要时很有用。最重要的是：它是线程安全的。&lt;br />[Search Kit,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />Search Kit,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>UIAppearance</title><link>https://autoptr.top/tutorials/NSHipster/2013-03-11-uiappearance/</link><pubDate>Mon, 11 Mar 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-03-11-uiappearance/</guid><description>UIAppearance 允许我们对视图和控件的样式在整个应用范围内进行统一的定义。&lt;br />[UIAppearance,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />UIAppearance,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSAssertionHandler</title><link>https://autoptr.top/tutorials/NSHipster/2013-02-25-nsassertionhandler/</link><pubDate>Mon, 25 Feb 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-02-25-nsassertionhandler/</guid><description>编程结合了人类思考过程中众多学科，从高层次的辩论和语义学——我们用来解释一个系统如何工作的故事——到支撑所有一切的数学和哲学机器。&lt;br />[NSAssertionHandler,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSAssertionHandler,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSURLCache</title><link>https://autoptr.top/tutorials/NSHipster/2013-02-11-nsurlcache/</link><pubDate>Mon, 11 Feb 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-02-11-nsurlcache/</guid><description>NSURLCache 为您的应用的 URL 请求提供了内存中以及磁盘上的综合缓存机制。作为基础类库 URL 加载系统的一部分，任何通过 NSURLConnection 加载的请求都将被 NSURLCache 处理。&lt;br />[NSURLCache,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSURLCache,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSValue</title><link>https://autoptr.top/tutorials/NSHipster/2013-01-28-nsvalue/</link><pubDate>Mon, 28 Jan 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-01-28-nsvalue/</guid><description>打包就是用一个面向对象的容器来封装标量及其他一些值类型的过程，主要用于将那些值保存到面向对象的集合中——如数组和字典。在基础类库中，以轻量级著称的一个包装便是 NSValue 。&lt;br />[NSValue,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSValue,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSLocalizedString</title><link>https://autoptr.top/tutorials/NSHipster/2013-01-21-nslocalizedstring/</link><pubDate>Mon, 21 Jan 2013 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2013-01-21-nslocalizedstring/</guid><description>字符串也许是计算中最通用的数据类型。它们以符号的方式传来传去，用来为数值编码，键值关联，代表资源路径，存储语言内容和格式的信息。对面向用户的字符串具有强有力的控制是营造良好的用户体验必不可少的能力。&lt;br />[NSLocalizedString,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSLocalizedString,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>CGGeometry</title><link>https://autoptr.top/tutorials/NSHipster/2012-12-17-cggeometry/</link><pubDate>Mon, 17 Dec 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-12-17-cggeometry/</guid><description>除非你是个数学极客或者一个古希腊人，否则几何学应该不是你高中时最喜欢的课程。不过你仍有机会成为那个在课堂上尽职尽责地将所有必要的公式的程序写到你的TI-8X计算器里的那个人。为了保持尽可能少地做数学问题的传统，这里列出了一些不算复杂的 CoreGraphics 函数使你的工作更简单。&lt;br />[CGGeometry,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />CGGeometry,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>KVC Collection Operators</title><link>https://autoptr.top/tutorials/NSHipster/2012-12-03-kvc-collection-operators/</link><pubDate>Mon, 03 Dec 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-12-03-kvc-collection-operators/</guid><description>Ruby爱好者总爱嘲笑Objective-C臃肿的语法。尽管新的Object Literals语法让我们瘦了几斤，但那些红头发的恶霸们还总是用他们的单行map和花哨的#to_proc符号嘲讽我们。幸运的是，我们有键-值编码这个王牌。&lt;br />[KVC Collection Operators,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />KVC Collection Operators,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSOrderedSet</title><link>https://autoptr.top/tutorials/NSHipster/2012-11-26-nsorderedset/</link><pubDate>Mon, 26 Nov 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-11-26-nsorderedset/</guid><description>为什吗`NSOrderedSet`不是继承自`NSSet`的捏？答案可能会让你大吃一惊。&lt;br />[NSOrderedSet,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSOrderedSet,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NS_ENUM &amp; NS_OPTIONS</title><link>https://autoptr.top/tutorials/NSHipster/2012-11-19-ns_enum-ns_options/</link><pubDate>Mon, 19 Nov 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-11-19-ns_enum-ns_options/</guid><description>一个专业的Objective-C工程师应该在面向对象和面向过程范式间优雅地切换，同时能够掌握二者的优势。&lt;br />[NS_ENUM &amp; NS_OPTIONS,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NS_ENUM &amp; NS_OPTIONS,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSValueTransformer</title><link>https://autoptr.top/tutorials/NSHipster/2012-11-12-nsvaluetransformer/</link><pubDate>Mon, 12 Nov 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-11-12-nsvaluetransformer/</guid><description>在 Foundation 框架的所有类中，NSValueTransformer 也许是从 OS X 平台迁移到 iOS 平台表现最差的那个。但是，经过一些雕琢和使用场景的改变，也许它能在你的应用中发挥重大作用。&lt;br />[NSValueTransformer,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSValueTransformer,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSURLProtocol</title><link>https://autoptr.top/tutorials/NSHipster/2012-11-05-nsurlprotocol/</link><pubDate>Mon, 05 Nov 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-11-05-nsurlprotocol/</guid><description>Foundation库的URL加载系统是每个iOS工程师应该熟练掌握的。而在Foundation库中所有与网络相关的类和接口中，NSURLProtocol或许是最黑科技的了。&lt;br />[NSURLProtocol,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSURLProtocol,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>UILocalizedIndexedCollation</title><link>https://autoptr.top/tutorials/NSHipster/2012-10-29-uilocalizedindexedcollation/</link><pubDate>Mon, 29 Oct 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-10-29-uilocalizedindexedcollation/</guid><description>当 UITableView 有一百来行时，它就变得有些笨重了。如果用户为了找到他们想要的东西，像玩水果忍者的猫那样疯狂地滑动屏幕时，你可能会想要重新考虑一下用户界面的展现方式。&lt;br />[UILocalizedIndexedCollation,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />UILocalizedIndexedCollation,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSLinguisticTagger</title><link>https://autoptr.top/tutorials/NSHipster/2012-10-22-nslinguistictagger/</link><pubDate>Mon, 22 Oct 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-10-22-nslinguistictagger/</guid><description>NSLinguisticTagger在语言学功能上来讲是一把名副其实的瑞士军刀，它可以讲自然语言的字符串标记为单词、确定词性和词根、划分出人名地名和组织名称、告诉你字符串使用的语言和语系。&lt;br />[NSLinguisticTagger,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSLinguisticTagger,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>AddressBookUI</title><link>https://autoptr.top/tutorials/NSHipster/2012-10-15-addressbookui/</link><pubDate>Mon, 15 Oct 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-10-15-addressbookui/</guid><description>Address Book UI是用来在用户地址簿展示、选择、编辑和创建联系人的iOS框架。与Message UI框架相似，Address Book UI包含了一些可以用dismissViewControllerAnimated:completion:方法来展示的试图控制器，它通过一些统一的接口提供常用的系统功能。&lt;br />[AddressBookUI,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />AddressBookUI,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>UICollectionView</title><link>https://autoptr.top/tutorials/NSHipster/2012-09-24-uicollectionview/</link><pubDate>Mon, 24 Sep 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-09-24-uicollectionview/</guid><description>从现在起，UICollectionView凭一己之力改变我们将要设计和开发iOS应用的方式。这并不是说，collection views是未知或模糊的。作为一个NSHipster，不仅仅是知道名不见经传的石头，更多是在它们家喻户晓、售罄一空之前就知道有前途。&lt;br />[UICollectionView,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />UICollectionView,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSCharacterSet</title><link>https://autoptr.top/tutorials/NSHipster/2012-09-17-nscharacterset/</link><pubDate>Mon, 17 Sep 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-09-17-nscharacterset/</guid><description>基础类库（Foundation）拥有最好的、功能也最全的string类的实现。但是仅当程序员熟练掌握它时，一个string的实现才是真的好。所以本周，我们将浏览一些基础类库的string生态系统中经常用到且用错的重要组成部分：NSCharacterSet。&lt;br />[NSCharacterSet,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSCharacterSet,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>UIAccessibility</title><link>https://autoptr.top/tutorials/NSHipster/2012-09-10-uiaccessibility/</link><pubDate>Mon, 10 Sep 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-09-10-uiaccessibility/</guid><description>辅助功能，如同国际化一样，是一个很难让开发者提起兴致来的话题，但是你也知道，让你对这些东西感兴趣起来就是 NSHipster 的任务。&lt;br />[UIAccessibility,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />UIAccessibility,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSLocale</title><link>https://autoptr.top/tutorials/NSHipster/2012-09-03-nslocale/</link><pubDate>Mon, 03 Sep 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-09-03-nslocale/</guid><description>产品的国际化就像牙线：所有人都知道他们应该使用，却可能都不去用。&lt;br />[NSLocale,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSLocale,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>CFBag</title><link>https://autoptr.top/tutorials/NSHipster/2012-08-27-cfbag/</link><pubDate>Mon, 27 Aug 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-08-27-cfbag/</guid><description>在计算机科学领域集合数据类型的殿堂中，bag没有数组、集合、联合数组、树、图、优先队列那么占有一席之地。其实bag本身就很晦涩，你可能从没听过这东西。&lt;br />[CFBag,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />CFBag,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSOperation</title><link>https://autoptr.top/tutorials/NSHipster/2012-08-20-nsoperation/</link><pubDate>Mon, 20 Aug 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-08-20-nsoperation/</guid><description>我们都知道，让程序瞬间加载并且快速响应的秘诀在于后台异步执行任务。&lt;br />[NSOperation,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSOperation,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSIncrementalStore</title><link>https://autoptr.top/tutorials/NSHipster/2012-08-13-nsincrementalstore/</link><pubDate>Mon, 13 Aug 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-08-13-nsincrementalstore/</guid><description>即使这个博客就是专门讲一些晦涩接口，但是`NSIncrementalStore`又刷新了我们对与“晦涩”这个词的理解。这个接口在iOS 5中被发布，相对于其他大家一定会用到的条目，它并没有在更新日志里有更着重的声明。但是讽刺的是，它有可能是iOS 5的API里最重要的一个，它将从现在开始改变我们创建应用的方式。&lt;br />[NSIncrementalStore,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSIncrementalStore,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>CFStringTransform</title><link>https://autoptr.top/tutorials/NSHipster/2012-08-06-cfstringtransform/</link><pubDate>Mon, 06 Aug 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-08-06-cfstringtransform/</guid><description>NSString 是基础类库中的佼佼者。 它虽然很强大，但是不提提它的可无缝转换的表兄弟 CFMutableString，或者更特殊的 CFStringTransform，是不负责任的。&lt;br />[CFStringTransform,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />CFStringTransform,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSDateComponents</title><link>https://autoptr.top/tutorials/NSHipster/2012-07-31-nsdatecomponents/</link><pubDate>Tue, 31 Jul 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-07-31-nsdatecomponents/</guid><description>[NSDateComponents,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSDateComponents,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSSortDescriptor</title><link>https://autoptr.top/tutorials/NSHipster/2012-07-24-nssortdescriptor/</link><pubDate>Tue, 24 Jul 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-07-24-nssortdescriptor/</guid><description>[NSSortDescriptor,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSSortDescriptor,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSCache</title><link>https://autoptr.top/tutorials/NSHipster/2012-07-14-nscache/</link><pubDate>Sat, 14 Jul 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-07-14-nscache/</guid><description>[NSCache,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSCache,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item><item><title>NSIndexSet</title><link>https://autoptr.top/tutorials/NSHipster/2012-07-07-nsindexset/</link><pubDate>Sat, 07 Jul 2012 09:32:29 +0800</pubDate><guid>https://autoptr.top/tutorials/NSHipster/2012-07-07-nsindexset/</guid><description>[NSIndexSet,macOS,C++,Cocoa,Objective-C,Swift,NSHipster]&lt;br />NSIndexSet,macOS,C++,Cocoa,Objective-C,Swift,NSHipster</description></item></channel></rss>